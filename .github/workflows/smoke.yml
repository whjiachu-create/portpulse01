name: Smoke Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  smoke-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install httpx

      - name: Run API selfcheck (retry once)
        env:
          PORTPULSE_BASE_URL: ${{ secrets.PORTPULSE_BASE_URL }}
          PORTPULSE_API_KEY: ${{ secrets.PORTPULSE_API_KEY }}
        run: |
          set -o pipefail
          for attempt in 1 2; do
            if timeout 30s bash scripts/selfcheck.sh 2>&1 | tee selfcheck.out; then
              echo "Selfcheck passed on attempt $attempt"
              exit 0
            else
              echo "Selfcheck failed on attempt $attempt"
              if [ $attempt -eq 2 ]; then
                echo "Both attempts failed"
                exit 1
              else
                sleep 5
              fi
            fi
          done

      - name: Upload selfcheck.out artifact
        uses: actions/upload-artifact@v4
        with:
          name: selfcheck-output
          path: selfcheck.out

      - name: Slack notification
        if: always() && secrets.SLACK_WEBHOOK_URL != ''
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          STATUS=$([[ "${{ job.status }}" == "success" ]] && echo GREEN || echo RED)
          TITLE="PortPulse selfcheck (CI)" LOG_FILE=selfcheck.out \
            SLACK_WEBHOOK_URL="$SLACK_WEBHOOK_URL" \
            bash scripts/notify_ops.sh

      - name: Run smoke test
        shell: bash
        env:
          PORTPULSE_BASE_URL: ${{ secrets.PORTPULSE_BASE_URL }}
          PORTPULSE_API_KEY: ${{ secrets.PORTPULSE_API_KEY }}
          PORTPULSE_PORT_OVERVIEW: ${{ secrets.PORTPULSE_PORT_OVERVIEW }}
          PORTPULSE_PORT_ALERTS: ${{ secrets.PORTPULSE_PORT_ALERTS }}
          PORTPULSE_ALERT_WINDOW: ${{ secrets.PORTPULSE_ALERT_WINDOW }}
        run: |
          set -euo pipefail
          python3 --version
          cat > smoke.py <<'PY'
          import os, time, sys
          import httpx

          BASE_URL = os.getenv("PORTPULSE_BASE_URL", "").rstrip("/")
          API_KEY  = os.getenv("PORTPULSE_API_KEY", "")
          PORT_OVV = os.getenv("PORTPULSE_PORT_OVERVIEW", "USLAX")
          PORT_ALR = os.getenv("PORTPULSE_PORT_ALERTS", "USNYC")
          ALERT_WIN = os.getenv("PORTPULSE_ALERT_WINDOW", "14d")

          headers = {"X-API-Key": API_KEY} if API_KEY else {}
          client = httpx.Client(timeout=10.0, follow_redirects=True)

          def get(path: str):
            url = f"{BASE_URL}{path}"
            r = client.get(url, headers=headers)
            ms = int(r.elapsed.total_seconds()*1000)
            print(f"{path} HTTP {r.status_code}  E2E={ms}ms")
            r.raise_for_status()

          get("/v1/health")
          get("/v1/sources")
          get(f"/v1/ports/{PORT_OVV}/snapshot")
          get(f"/v1/ports/{PORT_OVV}/dwell?days=14")
          get(f"/v1/ports/{PORT_OVV}/overview?format=csv")
          get(f"/v1/ports/{PORT_ALR}/alerts?window={ALERT_WIN}")
          get(f"/v1/ports/{PORT_OVV}/trend")
          PY
          python3 smoke.py