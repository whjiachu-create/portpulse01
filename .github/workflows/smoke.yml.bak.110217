name: Smoke Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  smoke-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install httpx

      - name: Run smoke test
        env:
          PORTPULSE_BASE_URL: ${{ secrets.PORTPULSE_BASE_URL }}
          PORTPULSE_API_KEY: ${{ secrets.PORTPULSE_API_KEY }}
          PORTPULSE_PORT_OVERVIEW: ${{ secrets.PORTPULSE_PORT_OVERVIEW }}
          PORTPULSE_PORT_ALERTS: ${{ secrets.PORTPULSE_PORT_ALERTS }}
          PORTPULSE_ALERT_WINDOW: ${{ secrets.PORTPULSE_ALERT_WINDOW }}
        run: |
          python3 - <<'PY'
import os
import httpx
import time

BASE_URL = os.getenv("PORTPULSE_BASE_URL")
API_KEY = os.getenv("PORTPULSE_API_KEY")
PORT_OVERVIEW = os.getenv("PORTPULSE_PORT_OVERVIEW")
PORT_ALERTS = os.getenv("PORTPULSE_PORT_ALERTS")
ALERT_WINDOW = os.getenv("PORTPULSE_ALERT_WINDOW")

HEADERS = {"X-API-Key": API_KEY}

def test_endpoint(path):
    url = f"{BASE_URL}{path}"
    print(f"Testing {url}...")
    response = httpx.get(url, headers=HEADERS, timeout=10)
    assert response.status_code == 200, f"Expected 200, got {response.status_code}"
    print(f"âœ… {path} passed")

# Retry once on failure
for attempt in range(2):
    try:
        test_endpoint(f"/v1/ports/{PORT_OVERVIEW}/overview")
        test_endpoint(f"/v1/ports/{PORT_ALERTS}/alerts?window={ALERT_WINDOW}")
        test_endpoint("/v1/sources")
        break
    except Exception as e:
        print(f"Attempt {attempt + 1} failed: {e}")
        if attempt == 1:
            raise
        time.sleep(5)
PY